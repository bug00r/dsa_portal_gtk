There no need to use my own resource mechanism because GTK has one :( :
    https://stackoverflow.com/questions/28855850/gtk-c-and-gtkbuilder-to-make-a-single-executable
    https://github.com/GNOME/gtk/tree/master/examples/application6
There is a resource way to define standard icon themes :):
    https://wiki.gnome.org/HowDoI/ThemedIcons

    To do so, place your icons in a resource directory structure that matches the hicolor icon theme:

    <gresources>
    <gresource prefix="/my/resources/icons/16x16/actions">
        <file>icon1.png</file>
        <file>icon2.png</file>
        ...
    </gresource>
    </gresources>
    Note that in contrast to the search path example, we don't include 'hicolor' in the path.

    Then, tell GtkIconTheme about the resource path where your icons are located:

    gtk_icon_theme_add_resource_path (gtk_icon_theme_get_default (),
                                        "/my/resources/icons");

Communication between widget in same template:
    https://developer.gnome.org/gtk3/stable/ch01s04.html#id-1.2.3.12.6

    https://developer.gnome.org/gtk3/stable/GtkWidget.html#gtk-widget-class-bind-template-child-full
    GObject *	gtk_widget_get_template_child ()
    #define	gtk_widget_class_bind_template_child()
    #define	gtk_widget_class_bind_template_child_internal()
    #define	gtk_widget_class_bind_template_child_private()
    #define	gtk_widget_class_bind_template_child_internal_private()
    void	gtk_widget_class_bind_template_child_full ()
    #define	gtk_widget_class_bind_template_callback()
    void	gtk_widget_class_bind_template_callback_full ()
    void	gtk_widget_class_set_connect_func ()

Setting Application based data and giving this data to different widgets could be as g object data:
    g_object_get_data ()
    g_object_set_data ()

    or by settings them only to the Application or Application window as pointer

    (http://www.mit.edu/afs.new/sipb/user/kolya/gtk/gtk+-1.2.10/docs/html/gtkfaq-1.html)
    (http://www.mit.edu/afs.new/sipb/user/kolya/gtk/gtk+-1.2.10/docs/html/gtkfaq-5.html)
    5.16 How do I remove the data I have attached to an object?
    When attaching the data to the object, you can use the gtk_object_set_data_full() function. The three first arguments of the function are the same as in gtk_object_set_data(). The fourth one is a pointer to a callback function which is called when the data is destroyed. The data is destroyed when you:

    destroy the object
    replace the data with a new one (with the same key)
    replace the data with NULL (with the same key)

Get Application window from callback:
    gtk_widget_get_toplevel ()